package com.example.advancement;

import java.util.Timer;

import com.example.advancement.R;

import android.app.Activity;
import android.content.Context;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.os.Vibrator;
import android.view.Window;
import android.widget.FrameLayout;
import android.widget.GridView;
import android.widget.LinearLayout;
import android.widget.Toast;

public class PlaylistActivity extends Activity implements CustomActivity{
	private FrameLayout mainView;
	private RollingStone rollingStone;
	private RedrawTask redrawTask;
	//private Timer timer;
	private boolean running = false;
	private GridAdapter gridAdapter;
	//private short refreshTime = 10;
	
	private Integer[] imageIds = {
            R.drawable.taylor_swift, R.drawable.justice, 
            R.drawable.daftpunk, R.drawable.fleetwoodmac
	};
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.playlist_activity);
		//setupActionBar();
	      
	    GridView gridview = (GridView) findViewById(R.id.gridview);
	    gridadapter = new GridAdapter(this, imageIds);
	    gridview.setAdapter(gridadapter);
		
		rollingStone = RollingStone.getInstance();
		//redrawTask = rollingStone.getRedrawTask();
		//timer = rollingStone.getTimer();
		mainView = (android.widget.FrameLayout) findViewById(R.id.painting_place_playback);
		
		
		((SensorManager) getSystemService(Context.SENSOR_SERVICE)).registerListener(new SensorEventListener() {
			@Override
			public void onSensorChanged(SensorEvent event) {
				event.values[0] = -event.values[0];
					redrawTask.updateSpeed(event.values, false);
					
				}
			@Override
			public void onAccuracyChanged(Sensor sensor, int accuracy) { } // ignore this event
	}, ((SensorManager) getSystemService(Context.SENSOR_SERVICE)).getSensorList(Sensor.TYPE_ACCELEROMETER).get(0), SensorManager.SENSOR_DELAY_GAME);
	
		mainView.setOnTouchListener(new android.view.View.OnTouchListener() {
			public boolean onTouch(android.view.View v,
					android.view.MotionEvent e) {
				
				return true;
			}
		});
	
	}
	
	public void changeActivity(){
		finish();
		overridePendingTransition(R.anim.push_right_in, R.anim.push_right_out);
	}
	
	public Vibrator getVibrator() {
		return (Vibrator) getSystemService(Context.VIBRATOR_SERVICE);
	}
	
	@Override
	public void onResume() {
		redrawTask = rollingStone.getRedrawTask();
		redrawTask.changeContext(this, mainView);
		redrawTask.paused = false;
		
		super.onResume();
	}
	
	@Override
	public void onPause() {
		redrawTask.pause();
		super.onPause();
	}
	
	public void makeToast(String s) {
		Toast.makeText(this, s, Toast.LENGTH_SHORT).show();
	}
}
