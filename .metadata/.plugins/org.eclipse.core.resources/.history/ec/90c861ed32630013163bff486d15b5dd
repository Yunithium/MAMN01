package com.example.advancement;

import java.util.Timer;

import com.example.advancement.R;

import android.app.Activity;
import android.content.Context;
import android.graphics.Color;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.os.Vibrator;
import android.util.DisplayMetrics;
import android.view.Window;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.GridView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

public class PlaylistActivity extends Activity implements CustomActivity{
	private FrameLayout mainView;
	private RollingStone rollingStone;
	private RedrawTask redrawTask;
	//private Timer timer;
	private boolean running = false;
	private GridAdapter gridAdapter;
	private GridView gridView;
	private int lastPosition;
	private int displaySize;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.playlist_activity);
		DisplayMetrics outMetrics = new DisplayMetrics();
		displaySize = outMetrics.heightPixels;
		//setupActionBar();
	      
	    gridView = (GridView) findViewById(R.id.gridview);
	    gridAdapter = new GridAdapter(this);
	    gridView.setAdapter(gridAdapter);
	    lastPosition = GridView.INVALID_POSITION;
		
		rollingStone = RollingStone.getInstance();
		//redrawTask = rollingStone.getRedrawTask();
		//timer = rollingStone.getTimer();
		mainView = (android.widget.FrameLayout) findViewById(R.id.painting_place_playback);
		
		
		((SensorManager) getSystemService(Context.SENSOR_SERVICE)).registerListener(new SensorEventListener() {
			@Override
			public void onSensorChanged(SensorEvent event) {
				event.values[0] = -event.values[0];
					redrawTask.updateSpeed(event.values, false);
				}
			@Override
			public void onAccuracyChanged(Sensor sensor, int accuracy) { } // ignore this event
	}, ((SensorManager) getSystemService(Context.SENSOR_SERVICE)).getSensorList(Sensor.TYPE_ACCELEROMETER).get(0), SensorManager.SENSOR_DELAY_GAME);
	
		mainView.setOnTouchListener(new android.view.View.OnTouchListener() {
			public boolean onTouch(android.view.View v,
					android.view.MotionEvent e) {
				return true;
			}
		});
	
	}
	
	public void changeActivity(){
		finish();
		overridePendingTransition(R.anim.push_right_in, R.anim.push_right_out);
	}
	
	public void activateButton(int buttonID) {
		Button button = (android.widget.Button) findViewById(buttonID);
		button.setBackgroundColor(Color.WHITE);
	}
	
	public void deActivateButton(int buttonID) {
		Button button = (android.widget.Button) findViewById(buttonID);
		button.setBackgroundColor(Color.GREEN);
	}

	public void changeImage(float x, float y){
		int position = gridView.pointToPosition((int) x, (int) y);
		
		if(position != lastPosition && position != gridView.INVALID_POSITION){
			gridAdapter.doAchange(position);
			gridAdapter.notifyDataSetChanged();
		}
	}
	
	public void scrollGridUp(){
	if(gridView.getScrollY()==0){
			
		} else{
			gridView.scrollBy(0, -2);
		}
	}
	
	public void scrollGrid(){
		if(gridView.getScrollY() <= gridView.getBottom() - displaySize + 50){
			gridView.scrollBy(0, 2);
		}
	}
	
	public Vibrator getVibrator() {
		return (Vibrator) getSystemService(Context.VIBRATOR_SERVICE);
	}
	
	@Override
	public void onResume() {
		redrawTask = rollingStone.getRedrawTask();
		redrawTask.changeContext(this, mainView);
		redrawTask.paused = false;
		
		super.onResume();
	}
	
	@Override
	public void onPause() {
		redrawTask.pause();
		super.onPause();
	}
	
	public void makeText(){
		TextView tv = (TextView) findViewById(R.id.temp);
		tv.setText("ScrollY: " + gridView.getScrollY());
		tv.setText(tv.getText() + ", sizeY: " + displaySize);
		tv.setText(tv.getText() + ", Bottom: " + gridView.getBottom());
	}
	
	public void makeToast(String s) {
		Toast.makeText(this, s, Toast.LENGTH_SHORT).show();
	}
}
